# Generated by Django 5.1.7 on 2025-03-27 00:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComunaPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_comuna', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Medida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_corto', models.CharField(max_length=100)),
                ('nombre_largo', models.CharField(max_length=255)),
                ('regulatorio', models.BooleanField(default=True)),
                ('datos_requeridos', models.JSONField()),
                ('descripcion_formula', models.TextField()),
                ('tipo_formula', models.CharField(choices=[('Formula', 'Formula'), ('Dicotomica', 'Dicotómica'), ('Numero', 'Número')], max_length=20)),
                ('formula', models.TextField()),
                ('umbral_medida', models.FloatField()),
                ('frecuencia', models.CharField(choices=[('anual', 'Anual'), ('unica', 'Única')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OrganismoPublico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_organismo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TiposMedidas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo_medida', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=dict)),
                ('calculo_indicador', models.FloatField()),
                ('cumple_requisitos', models.BooleanField(default=True)),
                ('fecha_reporte', models.DateField(auto_now_add=True)),
                ('id_medida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_prevencion.medida')),
            ],
        ),
        migrations.AddField(
            model_name='medida',
            name='id_organismo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_prevencion.organismopublico'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut_usuario', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('id_organismo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_prevencion.organismopublico')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='medida',
            name='id_tipo_medida',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proyecto_prevencion.tiposmedidas'),
        ),
    ]
